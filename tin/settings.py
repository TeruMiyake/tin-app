"""
Django settings for tin project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# 開発環境と本番環境でこれを変えないといけないかもしれないが、一旦置いておく
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # ここから自分で作成したアプリケーション
    'accounts',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # 追加
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tin.wsgi.application'


# カスタムユーザの設定
AUTH_USER_MODEL = 'accounts.User'


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# アカウント周りの設定

# ログインページの指定
# これをしておくと、ログインが必要な時、このページに飛ばしてくれる
LOGIN_URL = '/tin/accounts/login/'

# ログイン・ログアウト後にリダイレクトするページ
LOGIN_REDIRECT_URL = '/tin/accounts/'
LOGOUT_REDIRECT_URL = '/tin/accounts/'



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# 本番環境のみ使用される設定。collectstatic で static ファイルを集める場所
# 今回の設定ではこの設定と STATICFILES_DIRS が一致しているが、これと STATICFILES_DIRS を一致させないことも可能
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Django テンプレート内の static タグがこの URL に置き換えられる
# つまり「ユーザが実際にアクセスできる URL」もしくは「静的ファイルが配信される URL」を設定する
# /<ホスト名>/STATIC_URL となるので、'/static/' とすると https://***.jp/static/ となってしまう
# ちなみに、この URL でそのファイルが見られるように「実際に設定する」のは nginx.conf。
STATIC_URL = '/tin/static/'

# STATICFILES_DIRS を使うと、static ファイルを探す際の探す先として、STATIC_DIR 以外にも複数ディレクトリを登録することができるよう
# 現時点では必要無いが、基本的な構成と同じにするために入れてある
#STATIC_DIR = os.path.join(BASE_DIR, "static")
#STATICFILES_DIRS = [
#    STATIC_DIR,
#]


# import local_settings.py
try:
    from .local_settings import *
except ImportError:
    pass

## import pub_settings.py <- なぜかこの行を入れると動かない
# from .pub_settings import *